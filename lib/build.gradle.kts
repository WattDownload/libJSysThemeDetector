import java.time.ZoneId
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`

    alias(libs.plugins.vanniktech.maven.publish)
}

val time = ZonedDateTime.now(ZoneId.of("Asia/Colombo"))
    .format(DateTimeFormatter.ofPattern("HH-mm-ss dd-mm-yyyy"))

version = providers.gradleProperty("versionCode").orNull ?: "$time not-a-version"
group = "vip.zhifen"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation(libs.jna)
    implementation(libs.jna.platform)

    implementation(libs.oshi.core)

    implementation(libs.jetbrains.annotations)

    implementation(libs.semver4j)

    implementation(libs.jfa) {
        exclude("net.java.dev.jna", "jna")
    }

    implementation(libs.slf4j.api)
    testImplementation(libs.logback.core)
    testImplementation(libs.logback.classic)

    testImplementation("com.formdev:flatlaf:3.6.1")
    testImplementation("com.formdev:flatlaf-extras:3.6.1")
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("6.0.0")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

mavenPublishing {
    publishToMavenCentral()
    signAllPublications()

    coordinates(group.toString(), "jsysthemedetector", version.toString())

    pom {
        name.set("jsysthemedetector")
        description.set("Java System Theme Detector")
        inceptionYear.set("2025")
        url.set("https://github.com/WattDownload/libJSysThemeDetector/")
        licenses {
            license {
                name.set("GNU Affero General Public License, Version 3")
                url.set("https://www.gnu.org/licenses/agpl-3.0.txt")
                distribution.set("https://www.gnu.org/licenses/agpl-3.0.txt")
            }
        }
        developers {
            developer {
                id.set("Dansoftowner")
                name.set("Dansoftowner")
                url.set("https://github.com/Dansoftowner/")
            }
            developer {
                id.set("ZhiFenBL")
                name.set("ZhiFenBL")
                url.set("https://github.com/ZhiFenBL/")
            }
        }
        scm {
            url.set("https://github.com/ZhiFenBL/libJSysThemeDetector/")
            connection.set("scm:git:git://github.com/ZhiFenBL/libJSysThemeDetector.git")
            developerConnection.set("scm:git:ssh://git@github.com/ZhiFenBL/libJSysThemeDetector.git")
        }
    }
}